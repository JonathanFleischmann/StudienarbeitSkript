Mit Agency Table angefangen: 
1. Inserts generieren und ausführen
2. Foreign References generieren
3. Selects auf Foreign Reference Eigenschaften machen
4. IDs zu Foreign References ergänzen
5. Nächste Inserts mithilfe der generierten IDs als Fremdschlüssel ausführen


TODO:

im Nachhinein über ein weiteres Skript erkennen, ob Wiederholungen bei den rides vorhanden sind und auflösen (anhand von z.B. Abfahrtszeit erste Station und ID erste Station

im Nachhinein beim EInfügen der stop_times, wenn es bei den Trips mehrere gleiche Varianten (gleiches headsign) mit unterschiedlicher direction_id gibt dann neue Variante mit umgekehrten stop_times hinzufügen, wenn es bereits zwei gibt (mit unterschiedlichen Headsigns), dann Richtung bei entsprechendem umkehren

vllt. im Nachhinein headsign auf Basis der Stops ergänzen


PROBLEM:

Bei stop_times gehen bei einem trip_id key in der map datensätze verloren, man müsste einen zusammengesetzten Schlüssel machen (trip_id und sequence), aber am besten wäre eine map die afu trip id und sequnece keys hat

Erkenntnis: Rides müssen am Ende zusammen mit den stop_times eingefügt werden, da sie sich nicht immer anhand eigener Werte unterscheiden

exceptions nach rides, werden eig den periods zugewiesen, aber hier über ride_exception



Neue Überlegungen bei database_cache: 
Problem: wenn immer komplette db in memory geladen wird dann irgendwann ein Problem. Selbst schon bei großen GTFS-Dateien problematisch
-> Lösung: ich lade die GTFS-Daten nicht in memory sondern speichere sie in temporärer Datenbank auf die ich die Änderungen ausführe
=> Am anfang wird skript sehr langsam sein, aber später optimieren